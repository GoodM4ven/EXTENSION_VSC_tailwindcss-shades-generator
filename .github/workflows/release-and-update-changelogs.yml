name: Create Release, Auto Merge, Update Changelog, and Attach VSIX

on:
  push:
    tags:
      - 'v*.*.*'  # This will match tags like v2.0.1, v1.2.3, etc.

jobs:
  process:
    if: github.actor == 'GoodM4ven'  # Hard-coded username
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Merge PR
      run: |
        PR_NUMBER=$(gh pr list --base main --state open --author goodm4ven@proton.me --json number --jq '.[0].number')
        if [[ ! -z "$PR_NUMBER" ]]; then
            gh pr merge $PR_NUMBER --merge
        fi
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract release notes
      run: |
        echo "${{ github.event.head_commit.message }}" | sed '1d' > .github/release_body.md

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body_path: .github/release_body.md
        draft: false
        prerelease: false

    - name: Update Changelog
      uses: stefanzweifel/changelog-updater-action@v1
      with:
        latest-version: ${{ github.ref_name }}
        release-notes: ${{ github.event.head_commit.message }}

    - name: Commit updated CHANGELOG
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        branch: main
        commit_message: Update CHANGELOG
        file_pattern: CHANGELOG.md

    - name: Set up Node.js (Latest Version)
      uses: actions/setup-node@v3
      with:
        node-version: 'latest'

    - name: Install dependencies
      run: npm install

    - name: Extract version from tag
      id: extract_version
      run: |
        VERSION=${{ github.ref_name }}
        echo "Extracted version: $VERSION"
        echo "::set-output name=version::$VERSION"

    - name: Generate VSIX package
      run: |
        npm install -g vsce
        vsce package -o goodm4ven.tailwindcss-shades-generator-${{ steps.extract_version.outputs.version }}.vsix

    - name: Upload VSIX package to GitHub Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./goodm4ven.tailwindcss-shades-generator-${{ steps.extract_version.outputs.version }}.vsix
        asset_name: goodm4ven.tailwindcss-shades-generator-${{ steps.extract_version.outputs.version }}.vsix
        asset_content_type: application/octet-stream
